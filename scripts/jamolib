#!/bin/bash
readonly RED="\e[31m"
readonly YELLOW="\e[33m"
readonly GREEN="\e[32m"
readonly STD="\e[0m"

readonly DOCKERHUB="jamotion"

function msginfo {
    echo -e "${STD}$1"
}
function msgrun {
    echo -e "${YELLOW}$1...${STD}"
}
function msgdone {
    echo -e "${GREEN}$1${STD}"
}
function msgerror {
    echo -e "${RED}$1${STD}"
}

function stopcontainer {
    docker stop -t 30 $1
}

function readconfig {
  CFILE=$1
  REGION=$2
  REG="unknown"  
  IFS="="
  while read -r name value
  do
    KEY=$(echo "$name" | sed 's/^ *//g' | sed 's/ *$//g')
    if [ "${KEY:0:1}" == "[" ]; then
      REG=$KEY
    else
      VAL=$(echo "$value" | sed 's/^ *//g' | sed 's/ *$//g')
      if [ ! -z "$VAL" ]; then
        if [ -z "$REGION" ] || [ "$REG" == "[${REGION}]" ]; then
          CONF[$KEY]=$VAL
        fi
      fi
    fi
  done < $CFILE
}

function cp_hash
{
    local original_hash_name="$1"
    local copy_hash_name="$2"

    local __copy__=$(declare -p $original_hash_name);
    eval declare -A __copy__="${__copy__:$(expr index "${__copy__}" =)}";

    for i in "${!__copy__[@]}"
    do
        eval ${copy_hash_name}[$i]=${__copy__[$i]}
    done
}
